## Deployed Successfully but need to limit the SG Ingress CIDR

Parameters:
  SftpUserName:
    Type: String
    Description: Username for SFTP user
    Default: ""
  TransferUserRoleArn:
    Type: String
    Description: Role ARN for Transfer user
    Default: ""
  TransferLoggingRoleArn:
    Type: String
    Description: Role ARN for Transfer logging
    Default: ""
  AftacVpcId:
    Type: String
    Description: VPC ID for AFTAC Cloud
    Default: ""
  SftpServerSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for SFTP server
    Default: ""
  SftpBucketDataOwner:
    Type: String
    Description: Data Owner for SFTP bucket
    Default: ""
  SftpBucketGovPoc:
    Type: String
    Description: Gov POC for SFTP bucket
    Default: ""
  SftpBucketKeyOwner:
    Type: String
    Description: Key Owner for SFTP bucket
    Default: ""
  LambdaStorageBucket:
    Type: String
    Description: S3 Bucket for Lambda Storage
    Default: ""
  ObjectTaggerRoleARN:
    Type: String
    Description: Role ARN for Object Tagger
    Default: ""
  PrivateSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for Lambda function
    Default: ""
  ObjectTaggerLambdaCodeKey:
    Type: String
    Description: S3 Key for Lambda Code
    Default: ""

Resources:
  SftpFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Lambda Functions
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: !Ref AftacVpcId
  #### Fix This
  SftpBucketObjectTagger:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaStorageBucket
        S3Key: !Ref ObjectTaggerLambdaCodeKey
      Environment:
        Variables:
          DATA_OWNER: !Ref SftpBucketDataOwner
          GOV_POC: !Ref SftpBucketGovPoc
          KEY_OWNER: !Ref SftpBucketKeyOwner
          QUEUE_URL: !ImportValue aftac-pipeline-av-scan-queue
      FunctionName: sftp-bucket-object-tagger
      Handler: object_tagger.lambda_handler
      Role: !Ref ObjectTaggerRoleARN
      Runtime: python3.11
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
          - !Ref SftpFunctionSecurityGroup
        SubnetIds: !Ref PrivateSubnetIds

  SftpBucketObjectTaggerPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SftpBucketObjectTagger
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  SftpBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt SftpBucketObjectTagger.Arn
    DependsOn: SftpBucketObjectTagger

  SftpBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: SftpBucket
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - SftpBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SftpBucket
                        - Arn
                    - /*
        Version: "2012-10-17"

  SftpServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for SFTP Server
      VpcId: !Ref AftacVpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: Allow SSH access

  ElasticIpOne:
    Type: AWS::EC2::EIP

  ElasticIpTwo:
    Type: AWS::EC2::EIP

  sftpServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: VPC
      EndpointDetails:
        SecurityGroupIds:
          - !Ref SftpServerSecurityGroup
        SubnetIds: !Ref SftpServerSubnetIds
        AddressAllocationIds: #must match the length of the list of subnet ids)
          - !GetAtt ElasticIpOne.AllocationId
          - !GetAtt ElasticIpTwo.AllocationId
        VpcId: !Ref AftacVpcId
      IdentityProviderType: SERVICE_MANAGED
      LoggingRole: !Ref TransferLoggingRoleArn
      StructuredLogDestinations:
        - Fn::ImportValue: aftac-pipeline-SftpServerLogGroup

  TransferUser:
    Type: AWS::Transfer::User
    Properties:
      ServerId: !GetAtt sftpServer.ServerId
      UserName: !Ref SftpUserName
      HomeDirectoryType: PATH
      HomeDirectory: !Join
        - ""
        - - "/"
          - !Ref SftpBucket
          - "/"
          - !Ref SftpUserName
      Role: !Ref TransferUserRoleArn

Outputs:
  S3BucketName:
    Value: !Ref SftpBucket
  SFTPHostName:
    Value: !GetAtt sftpServer.ServerId
  SFTPUserName:
    Value: !Ref SftpUserName
##### Create S3 SFTP Server #### 2/14
