## Deployed Successfully but need to limit the SG Ingress CIDR

Parameters:
  IamPrefix:
    Type: String
    Description: Prefix added to all IAM resources

  ResourceSuffix:
    Type: String
    Description: Suffix added to the named AWS resources

  PermissionsBoundaryPolicyArn:
    Type: String
    Description: ARN of the policy that is used to set the permissions boundary for IAM resources

  VpcId:
    Type: String
    Description: VPC ID

  VpcCidr:
    Type: String
    Description: VPC CIDR

  S3PrefixListId:
    Type: String
    Description: The S3 prefix list ID

  PrivateSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for Lambda function

  SftpServerSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for SFTP server

  SftpServerIngressRuleCIDR:
    Type: String
    Description: CIDR for SFTP Server Ingress Rule

  LambdaStorageBucket:
    Type: String
    Description: S3 Bucket for Lambda Storage

  ObjectTaggerLambdaCodeKey:
    Type: String
    Description: S3 Key for Lambda Code

  ObjectTaggerLambdaCodeKeyVersion:
    Type: String
    Description: S3 object version of the Object Tagger Lambda code

  SftpUserName:
    Type: String
    Description: Username for SFTP user

  SftpBucketCDSProfile:
    Type: String
    Description: The CDS Profile for SFTP Bucket

  SftpBucketDataOwner:
    Type: String
    Description: Data Owner for SFTP bucket

  SftpBucketGovPoc:
    Type: String
    Description: Gov POC for SFTP bucket

  SftpBucketKeyOwner:
    Type: String
    Description: Key Owner for SFTP bucket

Resources:
  TransferLoggingRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28 # Resource found with an explicit name, this disallows updates that require replacement of this resource
            reason: An explicit name is required
    Properties:
      RoleName: !Sub ${IamPrefix}-TransferLoggingRole-${ResourceSuffix}
      PermissionsBoundary: !Ref PermissionsBoundaryPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: transfer.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TransferLoggingPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                Resource: !Sub arn:${AWS::Partition}:s3:::*
        - PolicyName: AWSTransferLoggingAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*

  TransferUserRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28 # Resource found with an explicit name, this disallows updates that require replacement of this resource
            reason: An explicit name is required
    Properties:
      RoleName: !Sub ${IamPrefix}-TransferUserRole-${ResourceSuffix}
      PermissionsBoundary: !Ref PermissionsBoundaryPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: transfer.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TransferUserPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObjectVersion
                  - s3:DeleteObjectVersion
                  - s3:ListBucket
                  - s3:DeleteObject
                  - s3:GetBucketLocation
                Resource: !Sub arn:${AWS::Partition}:s3:::*

  SftpFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Lambda Functions
      SecurityGroupEgress:
        - CidrIp: !Ref VpcCidr
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Allow TCP traffic out to VPC CIDR
        - DestinationPrefixListId: !Ref S3PrefixListId
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: Allow TCP traffic out to S3 Gateway Endpoint
      VpcId: !Ref VpcId

  SftpObjectTaggerRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28 # Resource found with an explicit name, this disallows updates that require replacement of this resource
            reason: An explicit name is required
    Properties:
      RoleName: !Sub ${IamPrefix}-sftp-ObjectTaggerRole-${ResourceSuffix}
      PermissionsBoundary: !Ref PermissionsBoundaryPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: ObjectTaggerRoleDefaultPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sqs:SendMessage
                Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action: dynamodb:PutItem
                Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - s3:GetObjectTagging
                  - s3:PutObjectTagging
                Resource: !Sub arn:${AWS::Partition}:s3:::*

  SftpBucketObjectTagger:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sftp-bucket-object-tagger-${ResourceSuffix}
      Handler: object_tagger.lambda_handler
      Role: !GetAtt SftpObjectTaggerRole.Arn
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          DATA_OWNER: !Ref SftpBucketDataOwner
          GOV_POC: !Ref SftpBucketGovPoc
          KEY_OWNER: !Ref SftpBucketKeyOwner
          CDS_PROFILE: !Ref SftpBucketCDSProfile
          QUEUE_URL:
            Fn::ImportValue: !Sub aftac-pipeline-av-scan-queue-${ResourceSuffix}
      Code:
        S3Bucket: !Ref LambdaStorageBucket
        S3Key: !Ref ObjectTaggerLambdaCodeKey
        S3ObjectVersion: !Ref ObjectTaggerLambdaCodeKeyVersion
      VpcConfig:
        SecurityGroupIds:
          - !Ref SftpFunctionSecurityGroup
        SubnetIds: !Ref PrivateSubnetIds

  SftpBucketObjectTaggerPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SftpBucketObjectTagger
      Principal: s3.amazonaws.com
      Action: lambda:InvokeFunction
      SourceAccount: !Ref AWS::AccountId

  SftpBucket:
    Type: AWS::S3::Bucket
    Properties:
      LoggingConfiguration:
        DestinationBucketName:
          Fn::ImportValue: !Sub access-logs-bucket-${ResourceSuffix}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt SftpBucketObjectTagger.Arn

  SftpBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SftpBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: s3:*
            Resource:
              - !Sub ${SftpBucket.Arn}
              - !Sub ${SftpBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: "false"

  SftpServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for SFTP Server
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 127.0.0.1/32
          Description: Removes default egress rule that allows all egress traffic on all ports and IP protocols to any location
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SftpServerIngressRuleCIDR
          Description: Allow SSH access

  ElasticIpOne:
    Type: AWS::EC2::EIP

  ElasticIpTwo:
    Type: AWS::EC2::EIP

  SftpServerLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      RetentionInDays: 731

  SftpServer:
    Type: AWS::Transfer::Server
    Properties:
      Domain: S3
      EndpointType: VPC
      EndpointDetails:
        SecurityGroupIds:
          - !Ref SftpServerSecurityGroup
        SubnetIds: !Ref SftpServerSubnetIds
        AddressAllocationIds: # Must match the length of the list of subnet ids)
          - !GetAtt ElasticIpOne.AllocationId
          - !GetAtt ElasticIpTwo.AllocationId
        VpcId: !Ref VpcId
      IdentityProviderType: SERVICE_MANAGED
      Protocols:
        - SFTP
      ProtocolDetails:
        SetStatOption: ENABLE_NO_OP
      SecurityPolicyName: TransferSecurityPolicy-2024-01
      LoggingRole: !GetAtt TransferLoggingRole.Arn
      StructuredLogDestinations:
        - !GetAtt SftpServerLogGroup.Arn
      Tags:
        - Key: Name
          Value: !Sub SFTP-Server-${ResourceSuffix}

  TransferUser:
    Type: AWS::Transfer::User
    Properties:
      ServerId: !GetAtt SftpServer.ServerId
      UserName: !Ref SftpUserName
      HomeDirectoryType: LOGICAL
      HomeDirectoryMappings:
        - Entry: / # chroot
          Target: !Sub /${SftpBucket}/${SftpUserName} # Limit visibility to this directory (and below) only
          Type: DIRECTORY
      Role: !GetAtt TransferUserRole.Arn

Outputs:
  S3BucketName:
    Value: !Ref SftpBucket

  SFTPHostName:
    Value: !GetAtt SftpServer.ServerId

  SFTPUserName:
    Value: !Ref SftpUserName
