## Deployed Successfully but need to limit the SG Ingress CIDR

Parameters:
  ResourceSuffix:
    Type: String
    Description: Suffix added to the named AWS resources

  VpcId:
    Type: String
    Description: VPC ID for AFTAC Cloud

  PrivateSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for Lambda function

  SftpServerSubnetIds:
    Type: CommaDelimitedList
    Description: Subnet IDs for SFTP server

  LambdaStorageBucket:
    Type: String
    Description: S3 Bucket for Lambda Storage

  ObjectTaggerLambdaCodeKey:
    Type: String
    Description: S3 Key for Lambda Code

  SftpUserName:
    Type: String
    Description: Username for SFTP user

  TransferUserRoleArn:
    Type: String
    Description: Role ARN for Transfer user

  TransferLoggingRoleArn:
    Type: String
    Description: Role ARN for Transfer logging

  SftpBucketCDSProfile:
    Type: String
    Description: The CDS Profile for SFTP Bucket

  SftpBucketDataOwner:
    Type: String
    Description: Data Owner for SFTP bucket

  SftpBucketGovPoc:
    Type: String
    Description: Gov POC for SFTP bucket

  SftpBucketKeyOwner:
    Type: String
    Description: Key Owner for SFTP bucket

  ObjectTaggerRoleARN:
    Type: String
    Description: Role ARN for Object Tagger

Resources:
  SftpFunctionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Lambda Functions
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: !Ref VpcId

  SftpBucketObjectTagger:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sftp-bucket-object-tagger-${ResourceSuffix}
      Handler: object_tagger.lambda_handler
      Role: !Ref ObjectTaggerRoleARN
      Runtime: python3.11
      Timeout: 30
      Environment:
        Variables:
          DATA_OWNER: !Ref SftpBucketDataOwner
          GOV_POC: !Ref SftpBucketGovPoc
          KEY_OWNER: !Ref SftpBucketKeyOwner
          CDS_PROFILE: !Ref SftpBucketCDSProfile
          QUEUE_URL:
            Fn::ImportValue: !Sub aftac-pipeline-av-scan-queue-${ResourceSuffix}
      Code:
        S3Bucket: !Ref LambdaStorageBucket
        S3Key: !Ref ObjectTaggerLambdaCodeKey
      VpcConfig:
        SecurityGroupIds:
          - !Ref SftpFunctionSecurityGroup
        SubnetIds: !Ref PrivateSubnetIds

  SftpBucketObjectTaggerPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SftpBucketObjectTagger
      Principal: s3.amazonaws.com
      Action: lambda:InvokeFunction
      SourceAccount: !Ref AWS::AccountId

  SftpBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt SftpBucketObjectTagger.Arn

  SftpBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SftpBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: s3:*
            Resource:
              - !Sub ${SftpBucket.Arn}
              - !Sub ${SftpBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: "false"

  SftpServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for SFTP Server
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: Allow SSH access

  ElasticIpOne:
    Type: AWS::EC2::EIP

  ElasticIpTwo:
    Type: AWS::EC2::EIP

  SftpServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: VPC
      EndpointDetails:
        SecurityGroupIds:
          - !Ref SftpServerSecurityGroup
        SubnetIds: !Ref SftpServerSubnetIds
        AddressAllocationIds: # Must match the length of the list of subnet ids)
          - !GetAtt ElasticIpOne.AllocationId
          - !GetAtt ElasticIpTwo.AllocationId
        VpcId: !Ref VpcId
      IdentityProviderType: SERVICE_MANAGED
      ProtocolDetails:
        SetStatOption: ENABLE_NO_OP
      LoggingRole: !Ref TransferLoggingRoleArn
      StructuredLogDestinations:
        - Fn::ImportValue: !Sub aftac-pipeline-SftpServerLogGroup-${ResourceSuffix}

  TransferUser:
    Type: AWS::Transfer::User
    Properties:
      ServerId: !GetAtt SftpServer.ServerId
      UserName: !Ref SftpUserName
      HomeDirectoryType: PATH
      HomeDirectory: !Sub /${SftpBucket}/${SftpUserName}
      Role: !Ref TransferUserRoleArn

Outputs:
  S3BucketName:
    Value: !Ref SftpBucket

  SFTPHostName:
    Value: !GetAtt SftpServer.ServerId

  SFTPUserName:
    Value: !Ref SftpUserName
