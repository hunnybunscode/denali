AWSTemplateFormatVersion: 2010-09-09
Description: Creates the stack for diode service simulator. The simulator does not implement all the Diode API calls - supported calls are documented in the README.txt.
Metadata:
  Copyright:
    Value: "(c) 2020, 2021 Amazon Web Services, Inc. or its affiliates. All Rights Reserved. This AWS Content is provided subject to the terms of the AWS Customer Agreement available at http://aws.amazon.com/agreement or other written agreements between Customer and Amazon Web Services, Inc."
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Simulator Application Location
        Parameters:
          - SoftwareDeploymentPackageBucketName
          - SimulatorDeploymentPackageObjectKey
          - ManifestHashLambdaDeploymentPackageObjectKey
      - Label:
          default: Amazon EC2 Configuration for Simulator Application
        Parameters:
          - InstanceType
          #          - KeyName
          #          - SSHLocation
          - LatestAmiId
          - InstanceTagName
          - VPCIdForServerSecurityGroup
          - SubnetId
      - Label:
          default: Simulator Application Configuration
        Parameters:
          - SimulatorListenPort
          - SimulatorAccessLocation
          - LowSideBucketName
          - HighSideBucketName
          - EnableAllBucketsAccess
          - MaximumDiodeTransfersPerSecond
          - MaximumFileSizeAllowed
          - MaximumAllowedMBInTransit
          - NumberOfCDSSystemsToRun
          - RandomTransferFailures
          - LogRetentionInDays
          - CloudWatchEventsSource
Parameters:
  SoftwareDeploymentPackageBucketName:
    Description: The name of your S3 bucket containing the simulator software package. This bucket must already exist and contain the simulator deployment package whose object key is specified by the SimulatorDeploymentPackageObjectKey parameter.
    Type: String
    MinLength: 3
  SimulatorDeploymentPackageObjectKey:
    Description: "The S3 object key, contained inside of your bucket named in the SoftwareDeploymentPackageBucketName parameter, that specifies the simulator software package. (Default: diode-simulator-application.zip)"
    Type: String
    MinLength: 3
    AllowedPattern: .*\.zip
    ConstraintDescription: must be the zip file name uploaded to s3 with simulator application bundle
    Default: diode-simulator-application.zip
  ManifestHashLambdaDeploymentPackageObjectKey:
    Description: "The S3 object key, contained inside of your bucket named in the SoftwareDeploymentPackageBucketName parameter, that specifies the Lambda hash calculators package. (Default: diode-simulator-swams-lambda-application.zip)"
    Type: String
    MinLength: 3
    AllowedPattern: .*\.zip
    ConstraintDescription: must be the zip file name uploaded to s3 with lambda functions for hash calculations
    Default: diode-simulator-swams-lambda-application.zip
  InstanceType:
    Description: EC2 instance type to run the Diode transfer service
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceTagName:
    Description: Specify the value for the Name tag for the EC2Server created as part of the template.
    Type: String
    MinLength: 4
    Default: DiodeSimulatorEC2Server
  VPCIdForServerSecurityGroup:
    Description: Specify a VPCId for the security group for the server, otherwise leave blank to use the default VPC.
    Type: String
    # Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Subnet id in which to launch an EC2 in VPC above (this subnet must be able to reach out to allow the server to build) - leave blank if using default VPC.
    Type: String
  LatestAmiId:
    # Use amazon linux 2
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  #  KeyName:
  #    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
  #    Type: 'AWS::EC2::KeyPair::KeyName'
  #    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  #  SSHLocation:
  #    Description: The IP address range that can be used to SSH to the EC2 instances
  #    Type: String
  #    MinLength: '9'
  #    MaxLength: '18'
  #    Default: 0.0.0.0/0
  #    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  #    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SimulatorListenPort:
    Description: The port number to listen on for API and CLI calls. (min=80, max=65000). Does not support https.
    Type: Number
    MinValue: 80
    MaxValue: 65000
    Default: 80
  SimulatorAccessLocation:
    Description: The IP address range that can be used to access the simulator endpoint. Be careful adding too big a CIDR value as you will expose simulator access to the world.
    Type: String
    MinLength: 9
    MaxLength: 18
    # Default: 0.0.0.0/0
    Default: 127.0.0.1/32
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LowSideBucketName:
    Description: The name of the S3 bucket whose objects will be transferred via diode. This bucket will be created-leave blank if you would like one auto-generated.
    Type: String
  HighSideBucketName:
    Description: The name of the S3 bucket where successfully transferred objects will be placed. This bucket will be created-leave blank if you would like one auto-generated.
    Type: String
  EnableAllBucketsAccess:
    AllowedValues:
      - false
      - true
    Default: false
    Description: Select true to allow simulator read access to all bucket data for you to simulate transfers and to allow using multiple buckets for high side mapping setup.
    Type: String
  MaximumDiodeTransfersPerSecond:
    Description: Each call to createTransfer will be placed against this limit. (min=1, max=10)
    Type: Number
    MinValue: 1
    MaxValue: 10
    Default: 1
  MaximumAllowedMBInTransit:
    Description: The total size of all transfers in transit allowed (in MB) until throttled. (min=2048, max=8192)
    Type: Number
    MinValue: 2048
    MaxValue: 8192
    Default: 2048
  MaximumFileSizeAllowed:
    Description: The maximum file size allowed in MB for transfers. Default diode limits are 100MB.
    Type: Number
    AllowedValues:
      - 1024
      - 2048
    Default: 1024
  NumberOfCDSSystemsToRun:
    Description: Total number of parallel CDS threads to run. (min=1, max=6)
    Type: Number
    MinValue: 1
    MaxValue: 6
    Default: 1
  RandomTransferFailures:
    Description: If random transfer fails should occur then set to true.
    AllowedValues:
      - false
      - true
    Default: false
    Type: String
  LogRetentionInDays:
    Description: Select number of days to retain simulator logs in cloudwatch - default is 7 days
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    Default: 7
    Type: Number
  CloudWatchEventsSource:
    Description: Value for source parameter in generated cloudwatch events. Do not use anything with aws in the prefix.
    Default: diode.simulator
    Type: String
Conditions:
  # Evaluates to TRUE if value is supplied for S3BucketName
  SuppliedLowBucketName: !Not [!Equals [!Ref LowSideBucketName, ""]]
  SuppliedHighBucketName: !Not [!Equals [!Ref HighSideBucketName, ""]]
  AllowAccessToAllBuckets: !Equals [!Ref EnableAllBucketsAccess, "true"]
  SuppliedVPCIdForPlacement:
    !Not [!Equals [!Ref VPCIdForServerSecurityGroup, ""]]
  SuppliedSubnetIdForPlacement: !Not [!Equals [!Ref SubnetId, ""]]
#Mappings:
#  AWSInstanceType2Arch:
#    t3.micro:
#      Arch: HVM64
#    t3.small:
#      Arch: HVM64
#    t3.medium:
#      Arch: HVM64
#  AWSRegionArch2AMI:
#    us-east-1:
#      HVM64: ami-0de53d8956e8dcf80
#    us-gov-west-1:
#      HVM64: ami-6b157f0a
Resources:
  SimulatorLogGroup:
    Type: AWS::Logs::LogGroup
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_158 # Ensure that CloudWatch Log Group is encrypted by KMS
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W84 # CloudWatchLogs LogGroup should specify a KMS Key Id to encrypt the log data
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub ${AWS::StackName}
      RetentionInDays: !Ref LogRetentionInDays

  CDSEventsQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 345600
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 900
      KmsDataKeyReusePeriodSeconds: 43200
      KmsMasterKeyId: alias/aws/sqs

  LowSideBucket:
    Type: AWS::S3::Bucket
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_18 # Ensure the S3 bucket has access logging enabled
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_21 # Ensure the S3 bucket has versioning enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W35 # S3 Bucket should have access logging configured
            reason: Template provided by the Diode service team for Diode simulator
          - id: W41 # S3 Bucket should have encryption option set
            reason: Template provided by the Diode service team for Diode simulator
          - id: W51 # S3 bucket should likely have a bucket policy
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    Properties:
      BucketName:
        !If [SuppliedLowBucketName, !Ref LowSideBucketName, !Ref "AWS::NoValue"]
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      # AccessControl: Private

  HighSideBucket:
    Type: AWS::S3::Bucket
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_18 # Ensure the S3 bucket has access logging enabled
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_21 # Ensure the S3 bucket has versioning enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W35 # S3 Bucket should have access logging configured
            reason: Template provided by the Diode service team for Diode simulator
          - id: W41 # S3 Bucket should have encryption option set
            reason: Template provided by the Diode service team for Diode simulator
          - id: W51 # S3 bucket should likely have a bucket policy
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    Properties:
      BucketName:
        !If [
          SuppliedHighBucketName,
          !Ref HighSideBucketName,
          !Ref "AWS::NoValue",
        ]
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      # AccessControl: Private

  # add a bucket that is internal to the simulator to store manifests if using the SWAMS service
  ManifestGeneratorBucket:
    Type: AWS::S3::Bucket
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_18 # Ensure the S3 bucket has access logging enabled
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_21 # Ensure the S3 bucket has versioning enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W35 # S3 Bucket should have access logging configured
            reason: Template provided by the Diode service team for Diode simulator
          - id: W41 # S3 Bucket should have encryption option set
            reason: Template provided by the Diode service team for Diode simulator
          - id: W51 # S3 bucket should likely have a bucket policy
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      # AccessControl: Private

  TransferTable:
    Type: AWS::DynamoDB::Table
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_119 # Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_28 # Ensure DynamoDB point in time recovery (backup) is enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W73 # DynamoDB table should have billing mode set to either PAY_PER_REQUEST or PROVISIONED
            reason: Template provided by the Diode service team for Diode simulator
          - id: W74 # DynamoDB table should have encryption enabled using a CMK stored in KMS
            reason: Template provided by the Diode service team for Diode simulator
          - id: W78 # DynamoDB table should have backup enabled, should be set using PointInTimeRecoveryEnabled
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: transferId
          AttributeType: S
      KeySchema:
        - AttributeName: transferId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 20
        WriteCapacityUnits: 20

  MappingTable:
    Type: AWS::DynamoDB::Table
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_119 # Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_28 # Ensure DynamoDB point in time recovery (backup) is enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W73 # DynamoDB table should have billing mode set to either PAY_PER_REQUEST or PROVISIONED
            reason: Template provided by the Diode service team for Diode simulator
          - id: W74 # DynamoDB table should have encryption enabled using a CMK stored in KMS
            reason: Template provided by the Diode service team for Diode simulator
          - id: W78 # DynamoDB table should have backup enabled, should be set using PointInTimeRecoveryEnabled
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: mappingId
          AttributeType: S
      KeySchema:
        - AttributeName: mappingId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 20
        WriteCapacityUnits: 20

  ManifestTable:
    Type: AWS::DynamoDB::Table
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_119 # Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_28 # Ensure DynamoDB point in time recovery (backup) is enabled
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W73 # DynamoDB table should have billing mode set to either PAY_PER_REQUEST or PROVISIONED
            reason: Template provided by the Diode service team for Diode simulator
          - id: W74 # DynamoDB table should have encryption enabled using a CMK stored in KMS
            reason: Template provided by the Diode service team for Diode simulator
          - id: W78 # DynamoDB table should have backup enabled, should be set using PointInTimeRecoveryEnabled
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: transferManifestId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: cleanupDate
          AttributeType: "N"
        - AttributeName: internalStatus
          AttributeType: S
        - AttributeName: expiryTime
          AttributeType: "N"
        - AttributeName: mappingId
          AttributeType: S
      KeySchema:
        - AttributeName: transferManifestId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: transferManifestId-cleanup-index
          KeySchema:
            - AttributeName: cleanupDate
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 20
            WriteCapacityUnits: 20
        - IndexName: internal-status-index
          KeySchema:
            - AttributeName: internalStatus
              KeyType: HASH
            - AttributeName: expiryTime
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 20
            WriteCapacityUnits: 20
        - IndexName: status-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: mappingId
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - payloadSizeBytes
          ProvisionedThroughput:
            ReadCapacityUnits: 20
            WriteCapacityUnits: 20
      ProvisionedThroughput:
        ReadCapacityUnits: 20
        WriteCapacityUnits: 20

  DynamoDBGeneralAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorDynamoDBLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:UpdateItem
              - dynamodb:Scan
            Resource:
              - !GetAtt MappingTable.Arn
              - !GetAtt TransferTable.Arn
              - !GetAtt ManifestTable.Arn
              # include the accesses to the special indices on this table
              - !Sub ${ManifestTable.Arn}/*
      Roles:
        - Ref: EC2ExecutionRole

  EC2ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  EC2EnvironmentAccessPolicy:
    Type: AWS::IAM::Policy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12 # IAM policy should not allow * resource
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      PolicyName: !Sub ${AWS::StackName}-AWSEC2EnvironmentAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: ec2:DescribeTags
            Resource: "*"
      Roles:
        - Ref: EC2ExecutionRole

  SQSGeneralAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorSQSLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sqs:GetQueueAttributes
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
            Resource:
              - !GetAtt CDSEventsQueue.Arn
      Roles:
        - Ref: EC2ExecutionRole

  S3LowSideGeneralAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorS3LowLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${LowSideBucket}
              - !Sub arn:${AWS::Partition}:s3:::${LowSideBucket}/*
      Roles:
        - Ref: EC2ExecutionRole
        - Ref: LambdaControllerCalculatorExecutionRole

  S3HighSideGeneralAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorS3HighLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:DeleteObject
              - s3:PutObject
              - s3:ListBucket
              - s3:PutObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${HighSideBucket}
              - !Sub arn:${AWS::Partition}:s3:::${HighSideBucket}/*
      Roles:
        - Ref: EC2ExecutionRole

  S3AllBucketsReadAccessPolicyForSWAMS:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorS3AllBucketsReadAccessSWAMS
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::*
              - !Sub arn:${AWS::Partition}:s3:::*/*
      Roles:
        - Ref: EC2ExecutionRole
        - Ref: LambdaControllerCalculatorExecutionRole

  S3ManifestGeneratorGeneralAccessPolicy:
    Type: AWS::IAM::Policy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F4 # IAM policy should not allow * action
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorS3BucketForManifestGeneratorAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${ManifestGeneratorBucket}
              - !Sub arn:${AWS::Partition}:s3:::${ManifestGeneratorBucket}/*
      Roles:
        - Ref: EC2ExecutionRole

  S3AllBucketsAccessPolicy:
    Type: AWS::IAM::Policy
    Condition: AllowAccessToAllBuckets
    Properties:
      PolicyName: !Sub ${AWS::StackName}-SimulatorS3AllBucketsAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectTagging
              - s3:DeleteObject
              - s3:PutObject
              - s3:PutObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::*
              - !Sub arn:${AWS::Partition}:s3:::*/*
      Roles:
        - Ref: EC2ExecutionRole
        - Ref: LambdaControllerCalculatorExecutionRole

  S3SoftwareLoadAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-S3SimulatorSoftwareLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${SoftwareDeploymentPackageBucketName}
              - !Sub arn:${AWS::Partition}:s3:::${SoftwareDeploymentPackageBucketName}/*
      Roles:
        - Ref: EC2ExecutionRole

  CloudWatchEventsAccessPolicy:
    Type: AWS::IAM::Policy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12 # IAM policy should not allow * resource
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CloudWatchEventsLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - events:PutEvents
            Resource:
              - "*"
      Roles:
        - Ref: EC2ExecutionRole

  CloudWatchAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CloudWatchLimitedAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource:
              #             - !Join [ ":", [ arn, !Ref "AWS::Partition", logs, "*", "*", "*" ]]
              - !GetAtt SimulatorLogGroup.Arn
      Roles:
        - Ref: EC2ExecutionRole

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2ExecutionRole

  SimulatorClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F1000 # Missing egress rule means all traffic is allowed outbound.  Make this explicit if it is desired configuration
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      GroupDescription: Enable client access to simulator
      VpcId: !If
        - SuppliedVPCIdForPlacement
        - !Ref VPCIdForServerSecurityGroup
        - !Ref AWS::NoValue

  SimulatorEC2ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_23 # Ensure every security groups rule has a description
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: F1000 # Missing egress rule means all traffic is allowed outbound.  Make this explicit if it is desired configuration
            reason: Template provided by the Diode service team for Diode simulator
          - id: W36 # Security group rules without a description obscure their purpose and may lead to bad practices in ensuring they only allow traffic from the ports and sources/destinations required.
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      GroupDescription: Enable SSH access and simulator access
      VpcId: !If
        - SuppliedVPCIdForPlacement
        - !Ref VPCIdForServerSecurityGroup
        - !Ref AWS::NoValue
      SecurityGroupIngress:
        #        -
        #          IpProtocol: tcp
        #          FromPort: '22'
        #          ToPort: '22'
        #          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: !Ref SimulatorListenPort
          ToPort: !Ref SimulatorListenPort
          CidrIp: !Ref SimulatorAccessLocation
        - IpProtocol: tcp
          FromPort: !Ref SimulatorListenPort
          ToPort: !Ref SimulatorListenPort
          SourceSecurityGroupId: !GetAtt SimulatorClientSecurityGroup.GroupId

  SimulatorEC2ServerEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref SimulatorEC2Server

  # Update CF template to use IMDSv2.
  SimulatorEC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        MetadataOptions:
          HttpEndpoint: enabled
          HttpTokens: required

  SimulatorEC2Server:
    DependsOn: S3SoftwareLoadAccessPolicy
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              awslogs: []
          files:
            "/home/ec2-user/diodeSimulator/diode_simulator.properties":
              content: !Sub |
                # Properties file for Diode test harness
                [diodeSimulator]
                HARNESS_LISTENER_PORT=8080
                RANDOM_FAILURES=${RandomTransferFailures}
                DYNAMO_TRANSFER_TABLE=${TransferTable}
                DYNAMO_MAPPING_TABLE=${MappingTable}
                DYNAMO_MANIFEST_TABLE=${ManifestTable}
                SQS_QUEUE_NAME=${CDSEventsQueue.QueueName}
                S3_LOW_BUCKET=${LowSideBucket}
                S3_DNS=${LowSideBucket.DomainName}
                S3_HIGH_BUCKET=${HighSideBucket}
                MANIFEST_STORAGE_BUCKET=${ManifestGeneratorBucket}
                MAXFILESIZEMB=${MaximumFileSizeAllowed}
                CLOUDWATCH_EVENTS_SOURCE=${CloudWatchEventsSource}
                NUM_MOVER_THREADS=${NumberOfCDSSystemsToRun}
                TPS=${MaximumDiodeTransfersPerSecond}
                AWS_REGION=${AWS::Region}
                ALLOWED_FILE_SUFFIX_DIR=/home/ec2-user/diodeSimulator/allowed_file_suffixes
                MAXINFLIGHTMBBYTES=${MaximumAllowedMBInTransit}
                ALLBUCKETSACCESS=${EnableAllBucketsAccess}
                SWAMSHASHCONTROLLERLAMBDA=${ControllerLambda}
              mode: "000644"
              owner: ec2-user
              group: ec2-user
            "/home/ec2-user/.aws/config":
              content: !Sub |
                [default]
                region = ${AWS::Region}
              mode: "000644"
              owner: ec2-user
              group: ec2-user
            "/etc/awslogs/awscli.conf":
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: "000644"
              owner: root
              group: root
            "/etc/awslogs/awslogs.conf":
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [/var/log/messages]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/messages
                log_stream_name = {instance_id}/var/log/messages
                log_group_name = ${SimulatorLogGroup}
                [/var/log/amazon/ssm/amazon-ssm-agent.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/amazon/ssm/amazon-ssm-agent.log
                log_stream_name = {instance_id}/var/log/amazon/ssm/amazon-ssm-agent.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/amazon/ssm/errors.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/amazon/ssm/errors.log
                log_stream_name = {instance_id}/var/log/amazon/ssm/errors.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/audit/audit.log]
                file = /var/log/audit/audit.log
                log_stream_name = {instance_id}/var/log/audit/audit.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/awslogs.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/awslogs.log
                log_stream_name = {instance_id}/var/log/awslogs.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/boot.log]
                file = /var/log/boot.log
                log_stream_name = {instance_id}/var/log/boot.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cfn-hup.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-hup.log
                log_stream_name = {instance_id}/var/log/cfn-hup.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cfn-init-cmd.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init-cmd.log
                log_stream_name = {instance_id}/var/log/cfn-init-cmd.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cfn-init.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-init.log
                log_stream_name = {instance_id}/var/log/cfn-init.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cfn-wire.log]
                datetime_format = %Y-%m-%d %H:%M:%S
                file = /var/log/cfn-wire.log
                log_stream_name = {instance_id}/var/log/cfn-wire.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cloud-init-output.log]
                file = /var/log/cloud-init-output.log
                log_stream_name = {instance_id}/var/log/cloud-init-output.log
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cloud-init.log]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cloud-init.log
                log_stream_name = {instance_id}/var/log/cloud-init.log
                # log_group_name = ${AWS::StackName}
                log_group_name = ${SimulatorLogGroup}
                [/var/log/cron]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cron
                log_stream_name = {instance_id}/var/log/cron
                log_group_name = ${SimulatorLogGroup}
                [/var/log/dmesg]
                file = /var/log/dmesg
                log_stream_name = {instance_id}/var/log/dmesg
                log_group_name = ${SimulatorLogGroup}
                [/var/log/grubby_prune_debug]
                file = /var/log/grubby_prune_debug
                log_stream_name = {instance_id}/var/log/grubby_prune_debug
                log_group_name = ${SimulatorLogGroup}
                [/var/log/maillog]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/maillog
                log_stream_name = {instance_id}/var/log/maillog
                log_group_name = ${SimulatorLogGroup}
                [/var/log/secure]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/secure
                log_stream_name = {instance_id}/var/log/secure
                log_group_name = ${SimulatorLogGroup}
                [/var/log/yum.log]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/yum.log
                log_stream_name = {instance_id}/var/log/yum.log
                log_group_name = ${SimulatorLogGroup}
                [/home/ec2-user/diodeSimulator/diodeSimulator.log]
                file = /home/ec2-user/diodeSimulator/diodeSimulator.log
                log_group_name = ${SimulatorLogGroup}
                log_stream_name = {instance_id}/diodeSimulator.log
                datetime_format = %b %d %H:%M:%S
              mode: "000644"
              owner: root
              group: root
          services:
            sysvinit:
              awslogsd:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                    - awslogs
                files:
                  - /etc/awslogs/awslogs.conf
                  - /etc/awslogs/awscli.conf
    Properties:
      ImageId: !Ref LatestAmiId
      #      ImageId: !FindInMap
      #        - AWSRegionArch2AMI
      #        - !Ref 'AWS::Region'
      #        - !FindInMap
      #          - AWSInstanceType2Arch
      #          - !Ref InstanceType
      #          - Arch
      InstanceType: !Ref InstanceType
      LaunchTemplate:
        LaunchTemplateId: !Ref SimulatorEC2LaunchTemplate
        Version: !GetAtt SimulatorEC2LaunchTemplate.LatestVersionNumber
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 40
      IamInstanceProfile: !Ref EC2InstanceProfile
      #      SecurityGroups:
      #         - !Ref SimulatorEC2ServerSecurityGroup
      # Switched to specifying SecurityGroupIds due to customer wanting to specify the VPC to place into
      SecurityGroupIds:
        - !GetAtt SimulatorEC2ServerSecurityGroup.GroupId
      #      KeyName: !Ref KeyName
      SubnetId: !If
        - SuppliedSubnetIdForPlacement
        - !Ref SubnetId
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Ref InstanceTagName
        - Key: SIMULATORVERSION
          Value: "2.1"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          yum install aws-cfn-bootstrap -y
          yum install xfsprogs -y
          yum install yum-cron -y
          systemctl enable yum-cron
          systemctl start yum-cron
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource SimulatorEC2Server --region ${AWS::Region}
          # yum install python3 -y
          # yum install python3-pip
          # Force install of python 3.8
          amazon-linux-extras install -y python3.8
          rm /bin/python3
          ln -s /bin/python3.8 /bin/python3
          rm /bin/pip3
          ln -s /bin/pip3.8 /bin/pip3
          pip3 install -U pip setuptools
          pip3 install boto3
          pip3 install boto
          pip3 install pyopenssl
          pip3 install lxml
          pip3 install json2xml==4.1.0
          cd /home/ec2-user
          # mkdir diodeSimulator - already created by cfn_init
          aws s3 cp s3://${SoftwareDeploymentPackageBucketName}/${SimulatorDeploymentPackageObjectKey} ${SimulatorDeploymentPackageObjectKey} --region ${AWS::Region}
          cp ${SimulatorDeploymentPackageObjectKey} diodeSimulator/.
          cd diodeSimulator
          unzip ${SimulatorDeploymentPackageObjectKey}
          rm ${SimulatorDeploymentPackageObjectKey}
          chown -R ec2-user:ec2-user /home/ec2-user 
          iptables -A PREROUTING -t nat -i eth0 -p tcp --dport ${SimulatorListenPort} -j REDIRECT --to-port 8080
          iptables -t nat -A OUTPUT -o lo -p tcp --dport ${SimulatorListenPort} -j REDIRECT --to-port 8080
          mkdir /etc/iptables
          iptables-save > /etc/iptables/rules.v4
          ip6tables-save > /etc/iptables/rules.v6
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30"` 
          PUBLIC_DNS_NAME=`curl -s -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-hostname`
          unset TOKEN
          echo "SIMULATORENDPOINT=http://$PUBLIC_DNS_NAME:${SimulatorListenPort}" >> /home/ec2-user/diodeSimulator/diode_simulator.properties
          chmod +x config_scripts/setupEC2Host.sh
          chmod +x config_scripts/setupiptables.sh
          # set default permissions on allowed file suffixes to read only
          chmod -w allowed_file_suffixes/default_allowed_file_suffixes
          ./config_scripts/setupEC2Host.sh

  # The following is a convenience queue setup so users of the simulator can pull from a queue as cloudwatch events
  # are generated by the simulator.
  CloudWatchEventsQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 86400
      KmsDataKeyReusePeriodSeconds: 43200
      KmsMasterKeyId: alias/aws/sqs

  CloudWatchEventsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F21 # SQS Queue policy should not allow * principal
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      Queues:
        - !Ref CloudWatchEventsQueue
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: !Sub ${AWS::StackName}-cwatchSimulatorEvents
            Effect: Allow
            Principal:
              AWS: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt CloudWatchEventsQueue.Arn
            Condition:
              StringEquals:
                aws:SourceArn: !GetAtt SimulatorCloudwatchEventRule.Arn

  SimulatorCloudwatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Diode Simulator CloudWatch Events EventRule
      EventPattern:
        source:
          - !Ref CloudWatchEventsSource
        detail:
          s3Bucket:
            - !Ref LowSideBucket
      State: ENABLED
      Targets:
        - Arn: !GetAtt CloudWatchEventsQueue.Arn
          Id: SuccessQueue

  # The following Lambda setups are to support manifest hash generation of the
  # hash keys, and they are invoked by the simulator to support SWAMS functionality.
  LambdaControllerCalculatorExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSLambda_FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchLogsFullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # We cheat by creating a log group of the same name that lambda would create, so we can set a retention policy
  LambdaControllerCwatchLogGroup:
    Type: AWS::Logs::LogGroup
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_158 # Ensure that CloudWatch Log Group is encrypted by KMS
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W84 # CloudWatchLogs LogGroup should specify a KMS Key Id to encrypt the log data
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${ControllerLambda}
      RetentionInDays: !Ref LogRetentionInDays

  EC2LambdaInvokePolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - LambdaControllerCalculatorExecutionRole
    Properties:
      PolicyName: !Sub ${AWS::StackName}-InvokeControllerLambda
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt ControllerLambda.Arn
      Roles:
        - Ref: EC2ExecutionRole

  ControllerLambda:
    Type: AWS::Lambda::Function
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_115 # Ensure that AWS Lambda function is configured for function-level concurrent execution limit
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_116 # Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_117 # Ensure that AWS Lambda function is configured inside a VPC
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_173 # Check encryption settings for Lambda environment variable
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W58 # Lambda functions require permission to write CloudWatch Logs
            reason: Template provided by the Diode service team for Diode simulator
          - id: W89 # Lambda functions should be deployed inside a VPC
            reason: Template provided by the Diode service team for Diode simulator
          - id: W92 # Lambda functions should define ReservedConcurrentExecutions to reserve simultaneous executions
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      Code:
        S3Bucket: !Ref SoftwareDeploymentPackageBucketName
        S3Key: !Ref ManifestHashLambdaDeploymentPackageObjectKey
      Role: !GetAtt LambdaControllerCalculatorExecutionRole.Arn
      Timeout: 900
      Handler: hash_lambda_controller.lambda_handler
      Runtime: python3.10
      MemorySize: 1344
      Environment:
        Variables:
          LOG_LEVEL: info
          LAMBDA_CALCULATOR: !Ref CalculatorLambda
          REGION: !Ref AWS::Region

  LambdaCalculatorCwatchLogGroup:
    Type: AWS::Logs::LogGroup
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_158 # Ensure that CloudWatch Log Group is encrypted by KMS
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W84 # CloudWatchLogs LogGroup should specify a KMS Key Id to encrypt the log data
            reason: Template provided by the Diode service team for Diode simulator
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${CalculatorLambda}
      RetentionInDays: !Ref LogRetentionInDays

  CalculatorLambda:
    Type: AWS::Lambda::Function
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_115 # Ensure that AWS Lambda function is configured for function-level concurrent execution limit
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_116 # Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_117 # Ensure that AWS Lambda function is configured inside a VPC
            comment: Template provided by the Diode service team for Diode simulator
          - id: CKV_AWS_173 # Check encryption settings for Lambda environment variable
            comment: Template provided by the Diode service team for Diode simulator
      cfn_nag:
        rules_to_suppress:
          - id: W58 # Lambda functions require permission to write CloudWatch Logs
            reason: Template provided by the Diode service team for Diode simulator
          - id: W89 # Lambda functions should be deployed inside a VPC
            reason: Template provided by the Diode service team for Diode simulator
          - id: W92 # Lambda functions should define ReservedConcurrentExecutions to reserve simultaneous executions
            reason: Template provided by the Diode service team for Diode simulator
    Properties:
      Code:
        S3Bucket: !Ref SoftwareDeploymentPackageBucketName
        S3Key: !Ref ManifestHashLambdaDeploymentPackageObjectKey
      Role: !GetAtt LambdaControllerCalculatorExecutionRole.Arn
      Timeout: 120
      Handler: hash_lambda_calculator.lambda_handler
      Runtime: python3.10
      MemorySize: 256
      Environment:
        Variables:
          LOG_LEVEL: info

Outputs:
  #  ServerLogin:
  #    Value: !Join
  #      - ''
  #      - - 'ssh -i '
  #        - !Ref KeyName
  #        - '.pem ec2-user@'
  #        - !GetAtt
  #          - SimulatorEC2Server
  #          - PublicDnsName
  #    Description: EC2 Server login

  SimulatorPublicEndpoint:
    Description: The value to use for public clients on all API calls as the --endpoint argument
    Value: !Sub http://${SimulatorEC2ServerEIP}:${SimulatorListenPort}

  SimulatorPrivateEndpoint:
    Description: The value to use for private clients on all API calls as the --endpoint argument
    Value: !Sub http://${SimulatorEC2Server.PrivateIp}:${SimulatorListenPort}

  ClientSecurityGroup:
    Description: The ID of the security group for Simulator clients to use.
    Value: !GetAtt SimulatorClientSecurityGroup.GroupId

  LowSideS3BucketName:
    Description: The name of the created S3 bucket whose objects will be transferred by diode.
    Value: !Ref LowSideBucket

  HighSideS3BucketName:
    Description: The name of the created S3 bucket where rejected by diode objects will be placed.
    Value: !Ref HighSideBucket

  IAMEC2ServiceRole:
    Description: The EC2 service role containing the policy to adjust to allow the simulator to reach additional S3 buckets for destination transfers; modify the SimulatorS3HighLimitedAccess policy to add additional buckets.
    Value: !Ref EC2ExecutionRole

  SQSQueueForCloudWatchSimulatorEvents:
    Description: The name of the created SQS queue to which simulator cloudwatch events are sent.
    Value: !GetAtt CloudWatchEventsQueue.QueueName

  Help:
    Description:
      For assistance or questions regarding this CloudFormation stack please email
      aws-diode@amazon.com
    Value: ""

  StandardMappingId:
    Description: This mapping is a standard diode mapping and is automatically setup to support the following datatypes txt, jpg, png, doc, csv, xml. The xml files in this mapping are not validated with an XSD. If you wish to add XSD validation place an XSD with the name 12346789-abcd-1234-abcd-123456789012.xsd and this will force xsd verification.
    Value: 12346789-abcd-1234-abcd-123456789012

  SoftwareArtifactsMappingId:
    Description: This mapping is a software artifacts mapping and is automatically setup to support simulated use of this special feature within the Diode service. This mapping requires the presentation of a payload and an associated manifest file that complies with the SA manifest format. This feature is a special approve list feature of the diode service and is not available by default to users of Diode without special paperwork and approval.
    Value: 6aa5455a-be47-45bd-b3e4-b21b8fe8aabc

  DiodeSimulatorEventSource:
    Value: !Ref CloudWatchEventsSource

  TemplateVersion:
    Value: 1.4

  SimulatorVersion:
    Value: 3.9.4
