Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Parameters
        Parameters:
          - IamPrefix
          - PermissionsBoundaryPolicyArn
          - ResourceSuffix

      - Label:
          default: Resources from Validation Account
        Parameters:
          - DataTransferBucketName
          - DataTransferSqsQueueArn
          - TranferResultSqsQueueArn
          - PipelineKmsKeyArn

      - Label:
          default: Data Transfer Lambda Code
        Parameters:
          - DataTransferLambdaStorageBucket
          - DataTransferLambdaCodeKey
          - DataTransferLambdaCodeKeyVersion

      - Label:
          default: Diode Simulator
        Parameters:
          - UseDiodeSimulator
          - DiodeSimulatorEndpoint

    ParameterLabels:
      IamPrefix:
        default: IAM Prefix
      PermissionsBoundaryPolicyArn:
        default: Permissions Boundary Policy ARN
      ResourceSuffix:
        default: Resource Suffix
      DataTransferBucketName:
        default: Data Transfer Bucket Name
      DataTransferSqsQueueArn:
        default: Data Transfer SQS Queue ARN
      TranferResultSqsQueueArn:
        default: Data Transfer Result SQS Queue ARN
      PipelineKmsKeyArn:
        default: Pipeline KMS Key ARN
      DataTransferLambdaStorageBucket:
        default: Data Transfer Lambda Storage Bucket
      DataTransferLambdaCodeKey:
        default: Data Transfer Lambda Code Key
      DataTransferLambdaCodeKeyVersion:
        default: Data Transfer Lambda Code Key Version
      UseDiodeSimulator:
        default: Use Diode Simulator
      DiodeSimulatorEndpoint:
        default: Diode Simulator Endpoint

Parameters:
  IamPrefix:
    Type: String
    Description: Required prefix for IAM resources
    Default: AFC2S
    AllowedValues: [AFC2S]
    ConstraintDescription: Must be "AFC2S"

  PermissionsBoundaryPolicyArn:
    Type: String
    Description: ARN of the policy that is used to set the permissions boundary for IAM resources
    AllowedPattern: ^arn:(aws|aws-us-gov):iam::(\d{12}|aws):policy/.*
    ConstraintDescription: Must be a valid IAM policy ARN

  ResourceSuffix:
    Type: String
    Description: >-
      Suffix added to the named AWS resources. It must start with a lowercase letter and contain
      only lowercase letters, numbers, and hyphens; its length cannot exceed 20.
    AllowedPattern: ^[a-z][a-z0-9-]{0,19}$
    ConstraintDescription: Must start with a lowercase letter and contain only lowercase letters, numbers, and hyphens; its length cannot exceed 20.

  DataTransferBucketName:
    Type: String
    Description: Name of the S3 data transfer bucket in the Validation Account
    AllowedPattern: ^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$
    ConstraintDescription: Bucket name can include numbers, lowercase letters, and hyphens; and must start and end with a lowercase letter or number

  DataTransferSqsQueueArn:
    Type: String
    Description: ARN of the Data Transfer SQS queue in the Validation Account
    AllowedPattern: ^arn:(aws|aws-us-gov):sqs:[a-z0-9-]+:\d{12}:[\w-]{1,80}$
    ConstraintDescription: Must be a valid ARN of the Data Transfer SQS queue in the Validation Account

  TranferResultSqsQueueArn:
    Type: String
    Description: ARN of the Data Transfer Result SQS queue in the Validation Account
    AllowedPattern: ^arn:(aws|aws-us-gov):sqs:[a-z0-9-]+:\d{12}:[\w-]{1,80}$
    ConstraintDescription: Must be a valid ARN of the Data Transfer Result SQS queue in the Validation Account

  PipelineKmsKeyArn:
    Type: String
    Description: ARN of the KMS key used for the data transfer pipeline
    AllowedPattern: ^arn:(aws|aws-us-gov):kms:[a-z0-9-]+:\d{12}:key/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    ConstraintDescription: Must be a valid ARN of the KMS key used for the data transfer pipeline

  DataTransferLambdaStorageBucket:
    Type: String
    Description: Name of the S3 Bucket that contains the Lambda code for data transfer
    AllowedPattern: ^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$
    ConstraintDescription: Bucket name can include numbers, lowercase letters, and hyphens; and must start and end with a lowercase letter or number

  DataTransferLambdaCodeKey:
    Type: String
    Description: S3 Key of the Lambda code for data transfer
    Default: data_transfer.zip

  DataTransferLambdaCodeKeyVersion:
    Type: String
    Description: Object version of S3 key of the Lambda code for data transfer
    AllowedPattern: ^[a-zA-Z0-9_.]{1,128}$
    ConstraintDescription: Must be a valid object version of the Lambda code for data transfer

  UseDiodeSimulator:
    Type: String
    Description: Select "True" if using a Diode simulator; otherwise, select "False".
    Default: "False"
    AllowedValues: ["True", "False"]
    ConstraintDescription: Must be True or False

  DiodeSimulatorEndpoint:
    Type: String
    Description: If using a Diode simulator, enter the simulator endpoint that starts with "http://"; otherwise, leave it blank.
    AllowedPattern: ^$|^http://[a-zA-Z0-9-\.]+(:\d{1,5})?/?$
    ConstraintDescription: Must be either blank or a valid URL of the Diode simulator endpoint

Conditions:
  UseDiodeSimulator: !Equals [!Ref UseDiodeSimulator, "True"]

Resources:
  DataTransferLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28 # Resource found with an explicit name, this disallows updates that require replacement of this resource
            reason: An explicit name is required
    Properties:
      RoleName: !Sub ${IamPrefix}-DataTransferLambdaRole-${ResourceSuffix}
      PermissionsBoundary: !Ref PermissionsBoundaryPolicyArn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Policies:
        - PolicyName: DataTransferLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt DataTransferLambdaFunctionLogGroup.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectTagging
                  - s3:ListBucket
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${DataTransferBucketName}
                  - !Sub arn:${AWS::Partition}:s3:::${DataTransferBucketName}/*
              - Effect: Allow
                Action: kms:Decrypt
                Resource: !Ref PipelineKmsKeyArn
                Condition:
                  StringEquals:
                    kms:ViaService: !Sub s3.${AWS::Region}.amazonaws.com
              - Effect: Allow
                Action:
                  - diode:CreateTransfer
                  - diode:DescribeTransfer
                Resource: "*"
              - Effect: Allow
                Action: sqs:SendMessage
                Resource: !Ref TranferResultSqsQueueArn
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ChangeMessageVisibility
                Resource:
                  - !Ref DataTransferSqsQueueArn
                  - !GetAtt TransferStatusQueue.Arn

  DataTransferLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/data-transfer-function-${ResourceSuffix}
      RetentionInDays: 90

  DataTransferLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58 # Lambda functions require permission to write CloudWatch Logs
            reason: The execution role includes permissions to write to CloudWatch Logs
    Properties:
      FunctionName: !Sub data-transfer-function-${ResourceSuffix}
      Handler: data_transfer.lambda_handler
      Role: !GetAtt DataTransferLambdaRole.Arn
      Runtime: python3.11
      LoggingConfig:
        LogGroup: !Ref DataTransferLambdaFunctionLogGroup
      # ReservedConcurrentExecutions: 50
      Timeout: 30
      Environment:
        Variables:
          TRANSFER_BUCKET_OWNER:
            !Select [4, !Split [":", !Ref TranferResultSqsQueueArn]]
          TRANSFER_RESULT_QUEUE_URL: !Sub
            - https://sqs.${AWS::Region}.${AWS::URLSuffix}/${AccountId}/${QueueName}
            - AccountId:
                !Select [4, !Split [":", !Ref TranferResultSqsQueueArn]]
              QueueName:
                !Select [5, !Split [":", !Ref TranferResultSqsQueueArn]]
          DATA_TRANSFER_QUEUE_URL: !Sub
            - https://sqs.${AWS::Region}.${AWS::URLSuffix}/${AccountId}/${QueueName}
            - AccountId: !Select [4, !Split [":", !Ref DataTransferSqsQueueArn]]
              QueueName: !Select [5, !Split [":", !Ref DataTransferSqsQueueArn]]
          USE_DIODE_SIMULATOR: !Ref UseDiodeSimulator
          DIODE_SIMULATOR_ENDPOINT: !Ref DiodeSimulatorEndpoint
      # VpcConfig:
      #   SecurityGroupIds:
      #     - GroupId
      #   SubnetIds: !Ref PrivateSubnetIds
      Code:
        S3Bucket: !Ref DataTransferLambdaStorageBucket
        S3Key: !Ref DataTransferLambdaCodeKey
        S3ObjectVersion: !Ref DataTransferLambdaCodeKeyVersion

  DataTransferLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !Ref DataTransferSqsQueueArn
      FunctionName: !GetAtt DataTransferLambdaFunction.Arn

  DataTransferLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DataTransferLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceArn: !Ref DataTransferSqsQueueArn

  DiodeEventBridgeEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Diode events rule
      State: ENABLED
      EventPattern:
        source:
          - !If [UseDiodeSimulator, diode.simulator, aws.diode]
        detail-type:
          - Diode Transfer Status
        detail:
          status:
            # - IN_TRANSIT
            - SUCCEEDED
            - FAILED
            - REJECTED
          s3Bucket:
            - !Ref DataTransferBucketName
      Targets:
        - Arn: !GetAtt TransferStatusQueue.Arn
          Id: TransferStatusQueue
          # RetryPolicy:
          #   MaximumRetryAttempts: 4
          #   MaximumEventAgeInSeconds: 300
          # DeadLetterConfig:
          #   Arn: DeadLetterQueueArn

  TransferStatusQueue:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      MessageRetentionPeriod: 345600 # Default value (4 days)
      ReceiveMessageWaitTimeSeconds: 20
      # KmsMasterKeyId: alias/aws/sqs

  TransferStatusQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TransferStatusQueue
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt TransferStatusQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt DiodeEventBridgeEventsRule.Arn

  TransferStatusEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt TransferStatusQueue.Arn
      FunctionName: !Ref DataTransferLambdaFunction
