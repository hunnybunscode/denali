environment:
  name: standard-dev
  region: us-west-1
  account: "908027385618"
  iam:
    prefix: AFC2S
    # permissionBoundaryArn: arn:aws:iam::908027385618:policy/ProjAdminPolicy
  proxy:
    httpProxy: http://SquidE-squid-yklwtdf6nwWK-4e68d1a228b1a39d.elb.us-west-1.amazonaws.com:3128
    httpsProxy: http://SquidE-squid-yklwtdf6nwWK-4e68d1a228b1a39d.elb.us-west-1.amazonaws.com:3128
    #noProxy: localhost,127.0.0.1,169.254.169.254,.internal,.corporate,10.0.0.0/8,192.168.0.0/16,172.20.0.0/16
    # noProxy: 10.0.0.0/16,localhost,127.0.0.1,169.254.169.254,.internal,s3.amazonaws.com,.s3.us-west-1.amazonaws.com,api.ecr.us-west-1.amazonaws.com,dkr.ecr.us-west-1.amazonaws.com,ec2.us-west-1.amazonaws.com,us-west-1.eks.amazonaws.com
    noProxy:
      - localhost,127.0.0.1,169.254.169.254,.internal,.corporate,10.0.0.0/16,192.168.0.0/16,172.20.0.0/16
      # List of all AWS Endpoints for target region

      - .access-analyzer.us-west-1.amazonaws.com
      - .account.us-west-1.amazonaws.com
      - .api.ecr.us-west-1.amazonaws.com
      - .api.sagemaker.us-west-1.amazonaws.com
      - .appstream2.us-west-1.amazonaws.com
      - .athena.us-west-1.amazonaws.com
      - .autoscaling.us-west-1.amazonaws.com
      - .backup.us-west-1.amazonaws.com
      - .cloudformation.us-west-1.amazonaws.com
      - .cloudfront.us-west-1.amazonaws.com
      - .cloudhsm.us-west-1.amazonaws.com
      - .cloudtrail.us-west-1.amazonaws.com
      - .cloudwatch.us-west-1.amazonaws.com
      - .codebuild.us-west-1.amazonaws.com
      - .codecommit.us-west-1.amazonaws.com
      - .codedeploy.us-west-1.amazonaws.com
      - .codepipeline.us-west-1.amazonaws.com
      - .cognito-identity.us-west-1.amazonaws.com
      - .cognito-idp.us-west-1.amazonaws.com
      - .config.us-west-1.amazonaws.com
      - .datasync.us-west-1.amazonaws.com
      - .dms.us-west-1.amazonaws.com
      - .dynamodb.us-west-1.amazonaws.com
      - .ebs.us-west-1.amazonaws.com
      - .ec2.us-west-1.amazonaws.com
      - .ecr.us-west-1.amazonaws.com
      - .ecs.us-west-1.amazonaws.com
      - .eks.us-west-1.amazonaws.com
      - .elasticache.us-west-1.amazonaws.com
      - .elasticbeanstalk.us-west-1.amazonaws.com
      - .elasticfilesystem.us-west-1.amazonaws.com
      - .elasticloadbalancing.us-west-1.amazonaws.com
      - .elasticmapreduce.us-west-1.amazonaws.com
      - .es.us-west-1.amazonaws.com
      - .events.us-west-1.amazonaws.com
      - .execute-api.us-west-1.amazonaws.com
      - .firehose.us-west-1.amazonaws.com
      - .fms.us-west-1.amazonaws.com
      - .fsx.us-west-1.amazonaws.com
      - .glacier.us-west-1.amazonaws.com
      - .guardduty.us-west-1.amazonaws.com
      - .iam.us-west-1.amazonaws.com
      - .inspector.us-west-1.amazonaws.com
      - .iot.us-west-1.amazonaws.com
      - .kinesis.us-west-1.amazonaws.com
      - .kms.us-west-1.amazonaws.com
      - .lambda.us-west-1.amazonaws.com
      - .logs.us-west-1.amazonaws.com
      - .monitoring.us-west-1.amazonaws.com
      - .organizations.us-west-1.amazonaws.com
      - .rds.us-west-1.amazonaws.com
      - .redshift.us-west-1.amazonaws.com
      - .route53.us-west-1.amazonaws.com
      - .s3.us-west-1.amazonaws.com
      - .secretsmanager.us-west-1.amazonaws.com
      - .securityhub.us-west-1.amazonaws.com
      - .servicecatalog.us-west-1.amazonaws.com
      - .ses.us-west-1.amazonaws.com
      - .sns.us-west-1.amazonaws.com
      - .sqs.us-west-1.amazonaws.com
      - .ssm.us-west-1.amazonaws.com
      - .states.us-west-1.amazonaws.com
      - .storagegateway.us-west-1.amazonaws.com
      - .sts.us-west-1.amazonaws.com
      - .support.us-west-1.amazonaws.com
      - .swf.us-west-1.amazonaws.com
      - .tagging.us-west-1.amazonaws.com
      - .transfer.us-west-1.amazonaws.com
      - .waf.us-west-1.amazonaws.com
      - .workspaces.us-west-1.amazonaws.com

      # EKS Cluster Endpoint
      - .us-west-1.eks.amazonaws.com

.vpc: &vpc
  id: vpc-0ea1fbb49ae45a7d2

hostedZones: &hostedZones
  - zoneName: denali.jktruong.people.aws.dev
    private: true
    vpc: *vpc
  - zoneName: denali.jktruong.people.aws.dev.internal
    private: true
    vpc: *vpc

.workerNodeAmi: &ami
  name: amazon-eks-node-al2023-x86_64-standard-1_30-stig-high *

.controlNodeGroupSubnets: &controlNodeGroupSubnets
  - id: subnet-06560cfdbfb912a8d
  - id: subnet-0ebd9551df362cfea

.controlIsolatedNodeGroupSubnets: &controlIsolatedNodeGroupSubnets
  - id: subnet-042c5dcde3059b394
  - id: subnet-049c85f8feaa48120

.workerNodeGroupSubnets: &workerNodeGroupSubnets
  - id: subnet-0e1ddd26680e52a10
  - id: subnet-0e8350b80dd689d3e

.workerIsolatedNodeGroupSubnets: &workerIsolatedNodeGroupSubnets
  - id: subnet-05884f84ac04232f4
  - id: subnet-0555d1cfda0d90d37

.workerNodeAlRootstorage: &al-storage
  rootDeviceName: /dev/xvda
  sizeInGB: 20
  type: gp3

.workerNodeRhelRootstorage: &rhel-storage
  rootDeviceName: /dev/sda1
  sizeInGB: 20
  type: gp3

clusters:
  - name: StandardSharedServices
    version: "1.30"
    private: false
    vpc:
      <<: *vpc
      subnets: *controlNodeGroupSubnets
      # subnets: *controlIsolatedNodeGroupSubnets
    hostedZones: *hostedZones
    nodeGroups:
      # - name: al2-compute-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-1.30-*
      #   storage: *al-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 40
      # - name: al2023-compute-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-al2023-x86_64-standard-1_30-stig-high *
      #   storage: *al-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
      # - name: al2023-compute-normal-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-al2023-x86_64-standard-1.30-*
      #   storage: *al-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
      # - name: rhel8-compute-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-rhel8-x86_64-standard-1_30-stig-high *
      #   storage: *rhel-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
      # - name: rhel9-compute-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-rhel9-x86_64-standard-1_30-stig-high *
      #   storage: *rhel-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
      - name: rhel9-compute-proxy-xlarge
        instanceType: m5a.xlarge
        ami:
          name: amazon-eks-node-rhel9-x86_64-standard-1_30-stig-high *
        storage: *rhel-storage
        isolated: true
        subnets: *workerIsolatedNodeGroupSubnets
        minSize: 1
        desiredCapacity: 1
        maxSize: 50
      # - name: rhel9-compute-normal-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-rhel9-x86_64-standard-1_30-normal *
      #   storage: *rhel-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
      # - name: rhel8-compute-normal-xlarge
      #   instanceType: m5a.xlarge
      #   ami:
      #     name: amazon-eks-node-rhel8-x86_64-standard-1_30-normal *
      #   storage: *rhel-storage
      #   subnets: *workerNodeGroupSubnets
      #   minSize: 1
      #   desiredCapacity: 1
      #   maxSize: 50
