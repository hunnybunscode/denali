{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "acm:*",
        "acm-pca:*",
        "apigateway:*",
        "application-autoscaling:*",
        "autoscaling:*",
        "aws-marketplace:View*",
        "aws-portal:View*",
        "budgets:ViewBudget",
        "cloudformation:*",
        "cloudhsm:*",
        "cloudtrail:*",
        "cloudwatch:*",
        "codedeploy:*",
        "comprehend:*",
        "config:*",
        "datapipeline:*",
        "diode:CreateTransfer",
        "diode:Describe*",
        "diode:Get*",
        "diode:List*",
        "directconnect:Describe*",
        "dms:*",
        "ds:*",
        "dynamodb:*",
        "ec2:AllocateAddress",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVolume",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImportTask",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateDhcpOptions",
        "ec2:CreateImage",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkInterface",
        "ec2:CreatePlacementGroup",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot*",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateVolume",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteNetworkInterface",
        "ec2:DeletePlacementGroup",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot*",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteTags",
        "ec2:DeleteVolume",
        "ec2:DeregisterImage",
        "ec2:Describe*",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVolume",
        "ec2:DisassociateAddress",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableVolumeIO",
        "ec2:Get*",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot*",
        "ec2:ImportVolume",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyVolume*",
        "ec2:MonitorInstances",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:ReleaseAddress",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotInstances",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:StartInstances",
        "ec2:StopInstances",
        "ec2:TerminateInstances",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnmonitorInstances",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:CreateVpcEndpoint",
        "ec2:ModifyVpcEndpoint",
        "ec2:DeleteVpcEndpoints",
        "ec2messages:*",
        "ecr:*",
        "ecs:*",
        "eks:*",
        "elasticache:*",
        "elasticfilesystem:*",
        "elasticloadbalancing:*",
        "elasticmapreduce:*",
        "es:*",
        "events:*",
        "firehose:*",
        "fsx:*",
        "glacier:*",
        "health:Describe*",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteServerCertificate",
        "iam:DeleteSigningCertificate",
        "iam:GenerateCredentialReport",
        "iam:Get*",
        "iam:List*",
        "iam:UpdateServerCertificate",
        "iam:UpdateSigningCertificate",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate",
        "kinesis:*",
        "kms:*",
        "lambda:*",
        "license-manager:*",
        "logs:*",
        "medialive:*",
        "mediapackage:*",
        "ram:*",
        "rds:*",
        "redshift:*",
        "route53:*",
        "s3:*",
        "sagemaker:*",
        "snowball:*",
        "sns:*",
        "sqs:*",
        "ssm:*",
        "ssmmessages:*",
        "states:*",
        "sts:DecodeAuthorizationMessage",
        "sts:GetCallerIdentity",
        "support:*",
        "swf:*",
        "transcribe:*",
        "translate:*",
        "trustedadvisor:*",
        "workspaces:*",
        "cloudshell:*",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "acm:*",
        "kafka:*",
        "wafv2:*",
        "secretsmanager:*",
        "securityhub:*"
      ],
      "Resource": "*",
      "Effect": "Allow",
      "Sid": "ProjAdminGenAccess"
    },
    {
      "Action": ["iam:PassRole"],
      "Resource": [
        "arn:{{partition}}:iam::*:role/INSTANCE*",
        "arn:{{partition}}:iam::*:role/LAMBDA*",
        "arn:{{partition}}:iam::*:role/snowball*",
        "arn:{{partition}}:iam::*:role/AFC2S*",
        "arn:{{partition}}:iam::*:role/workspaces*",
        "arn:{{partition}}:iam::*:role/service-role/*"
      ],
      "Effect": "Allow",
      "Sid": "ProjAdminGenPassRole"
    },
    {
      "Action": ["iam:PassRole"],
      "Resource": ["arn:{{partition}}:iam::*:role/EMRSERVICE"],
      "Effect": "Allow",
      "Sid": "ProjAdminEMRPassRole"
    },
    {
      "Action": ["elasticache:Purchase*", "rds:Purchase*", "redshift:Purchase*"],
      "Resource": "*",
      "Effect": "Deny",
      "Sid": "ProjAdminKMSECPurchaseDeny"
    },
    {
      "Action": ["ecs:DeleteAccountSetting"],
      "Resource": "*",
      "Effect": "Deny",
      "Sid": "ProjAdminKMSGrantDeny"
    },
    {
      "Action": ["iam:CreatePolicy"],
      "Resource": "*",
      "Effect": "Allow",
      "Sid": "ProjAdminCreateAnyPolicy"
    },
    {
      "Action": ["iam:AttachRolePolicy", "iam:CreateServiceLinkedRole", "iam:PutRolePolicy"],
      "Resource": ["arn:{{partition}}:iam::{{account}}:role/service-role/*"],
      "Effect": "Allow",
      "Sid": "ProjAdminCreateServiceRoles"
    },
    {
      "Action": ["iam:DeleteServiceLinkedRole", "iam:UpdateRoleDescription", "sts:*"],
      "Resource": ["arn:{{partition}}:iam::{{account}}:role/AFC2S*"],
      "Effect": "Allow",
      "Sid": "AFC2SRoles"
    },
    {
      "Condition": {
        "StringNotEquals": {
          "aws:ResourceTag/DAFCwManaged": "DAFCwManaged"
        }
      },
      "Action": ["iam:TagPolicy", "iam:UntagPolicy"],
      "Resource": ["arn:{{partition}}:iam::{{account}}:policy/AFC2S*"],
      "Effect": "Allow",
      "Sid": "AFC2STaggingPolicies"
    },
    {
      "Condition": {
        "StringNotEquals": {
          "aws:ResourceTag/DAFCwManaged": "DAFCwManaged"
        }
      },
      "Action": ["iam:TagInstanceProfile", "iam:UntagInstanceProfile"],
      "Resource": ["arn:{{partition}}:iam::{{account}}:instance-profile/*"],
      "Effect": "Allow",
      "Sid": "AFC2STaggingProfiles"
    },
    {
      "Condition": {
        "StringLike": {
          "iam:PermissionsBoundary": "arn:{{partition}}:iam::{{account}}:policy/ProjAdminPolicy"
        }
      },
      "Action": ["iam:AttachRolePolicy"],
      "Resource": ["arn:{{partition}}:iam::aws:policy/*"],
      "Effect": "Allow",
      "Sid": "AllowAttachManagedPolicies"
    },
    {
      "Condition": {
        "StringNotEquals": {
          "aws:RequestedRegion": "{{region}}"
        }
      },
      "Resource": "*",
      "Effect": "Deny",
      "NotAction": ["iam:*", "route53:*"],
      "Sid": "GovCloudWestEnforce"
    }
  ]
}
